{"ast":null,"code":"var _jsxFileName = \"/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/TripManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport { deleteTrip } from '../services/api';\nimport { useHistory } from 'react-router-dom';\nimport MapComponent from './MapComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TripManager() {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [tripName, setTripName] = useState('');\n  const [destination, setDestination] = useState('');\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [budget, setBudget] = useState('');\n  const [activities, setActivities] = useState({});\n  const [showActivities, setShowActivities] = useState({});\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [user, setUser] = useState(null); // Added user state\n  const history = useHistory();\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    if (!userId) {\n      alert(\"Please log in to view your trips\");\n      history.push('/login');\n    } else {\n      fetchUserData(); // Fetch user profile\n      fetchUserTrips(); // Fetch user's trips\n    }\n  }, [userId, history]);\n  const fetchUserData = async () => {\n    try {\n      const response = await api.get(`/profile/${userId}`);\n      setUser(response.data); // Set user data\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      alert('Failed to fetch user profile.');\n    }\n  };\n  const fetchUserTrips = async () => {\n    try {\n      const ownedTripsResponse = await api.get(`/trips?user_id=${userId}`);\n      const ownedTrips = ownedTripsResponse.data.map(trip => ({\n        ...trip,\n        sharedWith: trip.sharedWith || []\n      }));\n      const sharedTripsResponse = await api.get(`/users/${userId}/shared-trips`);\n      const sharedTrips = sharedTripsResponse.data.map(trip => ({\n        ...trip,\n        shared: true\n      }));\n      const allTrips = [...ownedTrips, ...sharedTrips];\n      setTrips(allTrips);\n    } catch (error) {\n      console.error(\"Error fetching trips:\", error);\n      alert('Failed to load trips.');\n    }\n  };\n  const fetchActivities = async tripId => {\n    try {\n      const response = await api.get(`/trips/${tripId}/activities`);\n      setActivities(prev => ({\n        ...prev,\n        [tripId]: response.data.length ? response.data : 'No activities for this trip.'\n      }));\n    } catch (error) {\n      console.error(`Error fetching activities for trip ${tripId}:`, error);\n      setActivities(prev => ({\n        ...prev,\n        [tripId]: 'No activities for this trip.'\n      }));\n    }\n  };\n  const toggleActivities = tripId => {\n    setShowActivities(prev => ({\n      ...prev,\n      [tripId]: !prev[tripId]\n    }));\n    if (!showActivities[tripId]) {\n      fetchActivities(tripId);\n    }\n  };\n  const createTrip = async () => {\n    if (budget < 0) {\n      alert(\"Budget must be a positive number\");\n      return;\n    }\n    try {\n      await api.post('/trips', {\n        name: tripName,\n        destination,\n        latitude,\n        longitude,\n        start_date: startDate,\n        end_date: endDate,\n        user_id: userId,\n        budget: parseFloat(budget) || 0.0\n      });\n      fetchUserTrips();\n      alert('Trip created successfully!');\n    } catch (error) {\n      alert('Failed to create trip.');\n    }\n  };\n  const handlePrint = async () => {\n    if (!user) {\n      alert(\"User data is not available.\");\n      return;\n    }\n    const activitiesMap = {};\n    for (const trip of trips) {\n      try {\n        const response = await api.get(`/trips/${trip.id}/activities`);\n        activitiesMap[trip.id] = response.data.length ? response.data : 'No activities for this trip.';\n      } catch (error) {\n        console.error(`Error fetching activities for trip ${trip.id}:`, error);\n        activitiesMap[trip.id] = 'No activities for this trip.';\n      }\n    }\n    const tripData = {\n      user,\n      trips,\n      activities: activitiesMap\n    };\n    history.push({\n      pathname: '/print',\n      state: tripData\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Trips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        localStorage.removeItem('user_id');\n        history.push('/login');\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Trips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), trips.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: trips.map(trip => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: trip.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Budget: $\", trip.budget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleActivities(trip.id),\n            children: showActivities[trip.id] ? 'Hide Activities' : 'View Activities'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), showActivities[trip.id] && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(activities[trip.id]) ? activities[trip.id].map(activity => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: activity.name\n            }, activity.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: activities[trip.id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this)]\n        }, trip.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trips found. Create a new trip to get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(TripManager, \"TpjjUeFpOOr1/7K9hK3IoF/SpbU=\", false, function () {\n  return [useHistory];\n});\n_c = TripManager;\nexport default TripManager;\nvar _c;\n$RefreshReg$(_c, \"TripManager\");","map":{"version":3,"names":["React","useState","useEffect","LoadScript","Autocomplete","api","deleteTrip","useHistory","MapComponent","jsxDEV","_jsxDEV","TripManager","_s","trips","setTrips","tripName","setTripName","destination","setDestination","latitude","setLatitude","longitude","setLongitude","startDate","setStartDate","endDate","setEndDate","budget","setBudget","activities","setActivities","showActivities","setShowActivities","autocomplete","setAutocomplete","user","setUser","history","userId","localStorage","getItem","alert","push","fetchUserData","fetchUserTrips","response","get","data","error","console","ownedTripsResponse","ownedTrips","map","trip","sharedWith","sharedTripsResponse","sharedTrips","shared","allTrips","fetchActivities","tripId","prev","length","toggleActivities","createTrip","post","name","start_date","end_date","user_id","parseFloat","handlePrint","activitiesMap","id","tripData","pathname","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","removeItem","Array","isArray","activity","_c","$RefreshReg$"],"sources":["/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/TripManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport { deleteTrip } from '../services/api';\nimport { useHistory } from 'react-router-dom';\nimport MapComponent from './MapComponent';\n\nfunction TripManager() {\n  const [trips, setTrips] = useState([]);\n  const [tripName, setTripName] = useState('');\n  const [destination, setDestination] = useState('');\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [budget, setBudget] = useState('');\n  const [activities, setActivities] = useState({});\n  const [showActivities, setShowActivities] = useState({});\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [user, setUser] = useState(null); // Added user state\n  const history = useHistory();\n\n  const userId = localStorage.getItem('user_id');\n\n  useEffect(() => {\n    if (!userId) {\n      alert(\"Please log in to view your trips\");\n      history.push('/login');\n    } else {\n      fetchUserData(); // Fetch user profile\n      fetchUserTrips(); // Fetch user's trips\n    }\n  }, [userId, history]);\n\n  const fetchUserData = async () => {\n    try {\n      const response = await api.get(`/profile/${userId}`);\n      setUser(response.data); // Set user data\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      alert('Failed to fetch user profile.');\n    }\n  };\n\n  const fetchUserTrips = async () => {\n    try {\n      const ownedTripsResponse = await api.get(`/trips?user_id=${userId}`);\n      const ownedTrips = ownedTripsResponse.data.map(trip => ({\n        ...trip,\n        sharedWith: trip.sharedWith || [],\n      }));\n\n      const sharedTripsResponse = await api.get(`/users/${userId}/shared-trips`);\n      const sharedTrips = sharedTripsResponse.data.map(trip => ({\n        ...trip,\n        shared: true,\n      }));\n\n      const allTrips = [...ownedTrips, ...sharedTrips];\n      setTrips(allTrips);\n    } catch (error) {\n      console.error(\"Error fetching trips:\", error);\n      alert('Failed to load trips.');\n    }\n  };\n\n  const fetchActivities = async (tripId) => {\n    try {\n      const response = await api.get(`/trips/${tripId}/activities`);\n      setActivities(prev => ({\n        ...prev,\n        [tripId]: response.data.length\n          ? response.data\n          : 'No activities for this trip.',\n      }));\n    } catch (error) {\n      console.error(`Error fetching activities for trip ${tripId}:`, error);\n      setActivities(prev => ({\n        ...prev,\n        [tripId]: 'No activities for this trip.',\n      }));\n    }\n  };\n\n  const toggleActivities = (tripId) => {\n    setShowActivities(prev => ({ ...prev, [tripId]: !prev[tripId] }));\n    if (!showActivities[tripId]) {\n      fetchActivities(tripId);\n    }\n  };\n\n  const createTrip = async () => {\n    if (budget < 0) {\n      alert(\"Budget must be a positive number\");\n      return;\n    }\n\n    try {\n      await api.post('/trips', {\n        name: tripName,\n        destination,\n        latitude,\n        longitude,\n        start_date: startDate,\n        end_date: endDate,\n        user_id: userId,\n        budget: parseFloat(budget) || 0.0\n      });\n      fetchUserTrips();\n      alert('Trip created successfully!');\n    } catch (error) {\n      alert('Failed to create trip.');\n    }\n  };\n\n  const handlePrint = async () => {\n    if (!user) {\n      alert(\"User data is not available.\");\n      return;\n    }\n\n    const activitiesMap = {};\n    for (const trip of trips) {\n      try {\n        const response = await api.get(`/trips/${trip.id}/activities`);\n        activitiesMap[trip.id] = response.data.length\n          ? response.data\n          : 'No activities for this trip.';\n      } catch (error) {\n        console.error(`Error fetching activities for trip ${trip.id}:`, error);\n        activitiesMap[trip.id] = 'No activities for this trip.';\n      }\n    }\n\n    const tripData = {\n      user,\n      trips,\n      activities: activitiesMap,\n    };\n\n    history.push({\n      pathname: '/print',\n      state: tripData,\n    });\n  };\n\n  return (\n    <div>\n      <h1>Manage Trips</h1>\n      <button onClick={() => {\n        localStorage.removeItem('user_id');\n        history.push('/login');\n      }}>Logout</button>\n      <div>\n        <button onClick={handlePrint}>Print</button>\n      </div>\n      <div>\n        <h2>Your Trips</h2>\n        {trips.length > 0 ? (\n          <ul>\n            {trips.map(trip => (\n              <li key={trip.id}>\n                <h3>{trip.name}</h3>\n                <p>Budget: ${trip.budget}</p>\n                <button onClick={() => toggleActivities(trip.id)}>\n                  {showActivities[trip.id] ? 'Hide Activities' : 'View Activities'}\n                </button>\n                {showActivities[trip.id] && (\n                  <ul>\n                    {Array.isArray(activities[trip.id]) ? (\n                      activities[trip.id].map(activity => (\n                        <li key={activity.id}>{activity.name}</li>\n                      ))\n                    ) : (\n                      <p>{activities[trip.id]}</p>\n                    )}\n                  </ul>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No trips found. Create a new trip to get started!</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TripManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}