{"ast":null,"code":"var _jsxFileName = \"/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/TripManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport { deleteTrip } from '../services/api';\nimport { useHistory } from 'react-router-dom';\nimport MapComponent from './MapComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TripManager() {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [tripName, setTripName] = useState('');\n  const [destination, setDestination] = useState('');\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [budget, setBudget] = useState('');\n  const [activities, setActivities] = useState({});\n  const [showActivities, setShowActivities] = useState({});\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [showShareForm, setShowShareForm] = useState({});\n  const [user, setUser] = useState(null); // Added state for user data\n  const history = useHistory();\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    if (!userId) {\n      alert(\"Please log in to view your trips\");\n      history.push('/login');\n    } else {\n      fetchUserData(); // Fetch user profile\n      fetchUserTrips(); // Fetch user's trips\n    }\n  }, [userId, history]);\n  const fetchUserData = async () => {\n    try {\n      const response = await api.get(`/profile/${userId}`);\n      setUser(response.data); // Set user data\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      alert('Failed to fetch user profile.');\n    }\n  };\n  const fetchUserTrips = async () => {\n    try {\n      const ownedTripsResponse = await api.get(`/trips?user_id=${userId}`);\n      const ownedTrips = ownedTripsResponse.data.map(trip => ({\n        ...trip,\n        sharedWith: trip.sharedWith || []\n      }));\n      const sharedTripsResponse = await api.get(`/users/${userId}/shared-trips`);\n      const sharedTrips = sharedTripsResponse.data.map(trip => ({\n        ...trip,\n        shared: true\n      }));\n      const allTrips = [...ownedTrips, ...sharedTrips];\n      setTrips(allTrips);\n    } catch (error) {\n      console.error(\"Error fetching trips:\", error);\n      alert('Failed to load trips.');\n    }\n  };\n  const handlePrint = () => {\n    if (!user) {\n      alert(\"User data is not available.\");\n      return;\n    }\n    const tripData = {\n      user,\n      // Pass the full user data\n      trips,\n      activities\n    };\n    history.push({\n      pathname: '/print',\n      state: tripData\n    });\n  };\n  const toggleShareForm = tripId => {\n    setShowShareForm(prev => ({\n      ...prev,\n      [tripId]: !prev[tripId]\n    }));\n  };\n  const fetchActivities = async tripId => {\n    try {\n      const response = await api.get(`/trips/${tripId}/activities`);\n      if (response.data.length === 0) {\n        setActivities(prev => ({\n          ...prev,\n          [tripId]: 'No activities created for this trip yet'\n        }));\n      } else {\n        setActivities(prev => ({\n          ...prev,\n          [tripId]: response.data\n        }));\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setActivities(prev => ({\n          ...prev,\n          [tripId]: 'No activities created for this trip yet'\n        }));\n      } else {\n        console.error(\"Error fetching activities:\", error);\n        alert('Failed to load activities for this trip.');\n      }\n    }\n  };\n  const toggleActivities = tripId => {\n    setShowActivities(prev => ({\n      ...prev,\n      [tripId]: !prev[tripId]\n    }));\n    if (!showActivities[tripId]) {\n      fetchActivities(tripId);\n    }\n  };\n  const createTrip = async () => {\n    if (budget < 0) {\n      alert(\"Budget must be a positive number\");\n      return;\n    }\n    try {\n      await api.post('/trips', {\n        name: tripName,\n        destination,\n        latitude,\n        longitude,\n        start_date: startDate,\n        end_date: endDate,\n        user_id: userId,\n        budget: parseFloat(budget) || 0.0\n      });\n      fetchUserTrips();\n      alert('Trip created successfully!');\n    } catch (error) {\n      alert('Failed to create trip.');\n    }\n  };\n  const handleDeleteTrip = async tripId => {\n    if (window.confirm(\"Are you sure you want to delete this trip?\")) {\n      try {\n        await deleteTrip(tripId);\n        alert(\"Trip deleted successfully\");\n        fetchUserTrips();\n      } catch (error) {\n        alert(\"Failed to delete trip\");\n      }\n    }\n  };\n  const handleDeleteActivity = async (tripId, activityId) => {\n    if (window.confirm(\"Are you sure you want to delete this activity?\")) {\n      try {\n        await api.delete(`/trips/${tripId}/itinerary/activities/${activityId}`);\n        alert(\"Activity deleted successfully\");\n        fetchActivities(tripId);\n      } catch (error) {\n        alert(\"Failed to delete activity\");\n      }\n    }\n  };\n  const handleShareTrip = async (tripId, email) => {\n    try {\n      const response = await api.post(`/trips/${tripId}/share`, {\n        email\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Error sharing trip:\", error);\n      alert(\"Failed to share trip.\");\n    }\n  };\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split('-');\n    const date = new Date(year, month - 1, day);\n    const options = {\n      month: 'long',\n      day: 'numeric'\n    };\n    return date.toLocaleDateString('en-US', options);\n  };\n  const onLoad = autocompleteInstance => {\n    setAutocomplete(autocompleteInstance);\n  };\n  const onPlaceChanged = () => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setDestination(place.formatted_address);\n        setLatitude(place.geometry.location.lat());\n        setLongitude(place.geometry.location.lng());\n      } else {\n        alert(\"Please select a valid location from the suggestions.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Trips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        localStorage.removeItem('user_id');\n        history.push('/login');\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(TripManager, \"EmTQvnKvuWCh/VvyGeYYpS5Yt4g=\", false, function () {\n  return [useHistory];\n});\n_c = TripManager;\nexport default TripManager;\nvar _c;\n$RefreshReg$(_c, \"TripManager\");","map":{"version":3,"names":["React","useState","useEffect","LoadScript","Autocomplete","api","deleteTrip","useHistory","MapComponent","jsxDEV","_jsxDEV","TripManager","_s","trips","setTrips","tripName","setTripName","destination","setDestination","latitude","setLatitude","longitude","setLongitude","startDate","setStartDate","endDate","setEndDate","budget","setBudget","activities","setActivities","showActivities","setShowActivities","autocomplete","setAutocomplete","showShareForm","setShowShareForm","user","setUser","history","userId","localStorage","getItem","alert","push","fetchUserData","fetchUserTrips","response","get","data","error","console","ownedTripsResponse","ownedTrips","map","trip","sharedWith","sharedTripsResponse","sharedTrips","shared","allTrips","handlePrint","tripData","pathname","state","toggleShareForm","tripId","prev","fetchActivities","length","status","toggleActivities","createTrip","post","name","start_date","end_date","user_id","parseFloat","handleDeleteTrip","window","confirm","handleDeleteActivity","activityId","delete","handleShareTrip","email","message","formatDate","dateString","year","month","day","split","date","Date","options","toLocaleDateString","onLoad","autocompleteInstance","onPlaceChanged","place","getPlace","geometry","formatted_address","location","lat","lng","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","removeItem","_c","$RefreshReg$"],"sources":["/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/TripManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport { deleteTrip } from '../services/api';\nimport { useHistory } from 'react-router-dom';\nimport MapComponent from './MapComponent';\n\nfunction TripManager() {\n  const [trips, setTrips] = useState([]);\n  const [tripName, setTripName] = useState('');\n  const [destination, setDestination] = useState('');\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [budget, setBudget] = useState('');\n  const [activities, setActivities] = useState({});\n  const [showActivities, setShowActivities] = useState({});\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [showShareForm, setShowShareForm] = useState({});\n  const [user, setUser] = useState(null); // Added state for user data\n  const history = useHistory();\n\n  const userId = localStorage.getItem('user_id');\n\n  useEffect(() => {\n    if (!userId) {\n      alert(\"Please log in to view your trips\");\n      history.push('/login');\n    } else {\n      fetchUserData(); // Fetch user profile\n      fetchUserTrips(); // Fetch user's trips\n    }\n  }, [userId, history]);\n\n  const fetchUserData = async () => {\n    try {\n      const response = await api.get(`/profile/${userId}`);\n      setUser(response.data); // Set user data\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      alert('Failed to fetch user profile.');\n    }\n  };\n\n  const fetchUserTrips = async () => {\n    try {\n      const ownedTripsResponse = await api.get(`/trips?user_id=${userId}`);\n      const ownedTrips = ownedTripsResponse.data.map(trip => ({\n        ...trip,\n        sharedWith: trip.sharedWith || [],\n      }));\n\n      const sharedTripsResponse = await api.get(`/users/${userId}/shared-trips`);\n      const sharedTrips = sharedTripsResponse.data.map(trip => ({\n        ...trip,\n        shared: true,\n      }));\n\n      const allTrips = [...ownedTrips, ...sharedTrips];\n      setTrips(allTrips);\n    } catch (error) {\n      console.error(\"Error fetching trips:\", error);\n      alert('Failed to load trips.');\n    }\n  };\n\n  const handlePrint = () => {\n    if (!user) {\n      alert(\"User data is not available.\");\n      return;\n    }\n    const tripData = {\n      user, // Pass the full user data\n      trips,\n      activities,\n    };\n    history.push({\n      pathname: '/print',\n      state: tripData,\n    });\n  };\n\n  const toggleShareForm = (tripId) => {\n    setShowShareForm((prev) => ({\n      ...prev,\n      [tripId]: !prev[tripId],\n    }));\n  };\n\n  const fetchActivities = async (tripId) => {\n    try {\n      const response = await api.get(`/trips/${tripId}/activities`);\n      if (response.data.length === 0) {\n        setActivities(prev => ({ ...prev, [tripId]: 'No activities created for this trip yet' }));\n      } else {\n        setActivities(prev => ({ ...prev, [tripId]: response.data }));\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setActivities(prev => ({ ...prev, [tripId]: 'No activities created for this trip yet' }));\n      } else {\n        console.error(\"Error fetching activities:\", error);\n        alert('Failed to load activities for this trip.');\n      }\n    }\n  };\n\n  const toggleActivities = (tripId) => {\n    setShowActivities(prev => ({ ...prev, [tripId]: !prev[tripId] }));\n    if (!showActivities[tripId]) {\n      fetchActivities(tripId);\n    }\n  };\n\n  const createTrip = async () => {\n    if (budget < 0) {\n      alert(\"Budget must be a positive number\");\n      return;\n    }\n\n    try {\n      await api.post('/trips', {\n        name: tripName,\n        destination,\n        latitude,\n        longitude,\n        start_date: startDate,\n        end_date: endDate,\n        user_id: userId,\n        budget: parseFloat(budget) || 0.0\n      });\n      fetchUserTrips();\n      alert('Trip created successfully!');\n    } catch (error) {\n      alert('Failed to create trip.');\n    }\n  };\n\n  const handleDeleteTrip = async (tripId) => {\n    if (window.confirm(\"Are you sure you want to delete this trip?\")) {\n      try {\n        await deleteTrip(tripId);\n        alert(\"Trip deleted successfully\");\n        fetchUserTrips();\n      } catch (error) {\n        alert(\"Failed to delete trip\");\n      }\n    }\n  };\n\n  const handleDeleteActivity = async (tripId, activityId) => {\n    if (window.confirm(\"Are you sure you want to delete this activity?\")) {\n      try {\n        await api.delete(`/trips/${tripId}/itinerary/activities/${activityId}`);\n        alert(\"Activity deleted successfully\");\n        fetchActivities(tripId);\n      } catch (error) {\n        alert(\"Failed to delete activity\");\n      }\n    }\n  };\n\n  const handleShareTrip = async (tripId, email) => {\n    try {\n      const response = await api.post(`/trips/${tripId}/share`, { email });\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Error sharing trip:\", error);\n      alert(\"Failed to share trip.\");\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const [year, month, day] = dateString.split('-');\n    const date = new Date(year, month - 1, day);\n    const options = { month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n  };\n\n  const onLoad = (autocompleteInstance) => {\n    setAutocomplete(autocompleteInstance);\n  };\n\n  const onPlaceChanged = () => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setDestination(place.formatted_address);\n        setLatitude(place.geometry.location.lat());\n        setLongitude(place.geometry.location.lng());\n      } else {\n        alert(\"Please select a valid location from the suggestions.\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Manage Trips</h1>\n      <button onClick={() => {\n        localStorage.removeItem('user_id');\n        history.push('/login');\n      }}>Logout</button>\n      <div>\n        {/* Other UI elements for creating trips */}\n      </div>\n      <div>\n        <button onClick={handlePrint}>Print</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TripManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}