{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylo\\\\Desktop\\\\EECS581\\\\TravelMate\\\\frontend\\\\src\\\\components\\\\ItineraryManager.jsx\",\n  _s = $RefreshSig$();\n// ItineraryManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItineraryManager() {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [newActivity, setNewActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: ''\n  });\n  const {\n    tripId\n  } = useParams(); // Get trip ID from route parameters\n\n  useEffect(() => {\n    // Fetch activities for the current trip\n    fetch(`/trips/${tripId}/activities`).then(response => response.json()).then(data => setActivities(data)).catch(error => console.error('Error fetching activities:', error));\n  }, [tripId]);\n  const handleChange = e => {\n    setNewActivity({\n      ...newActivity,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // POST request to add a new activity\n    fetch(`/trips/${tripId}/activities`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newActivity)\n    }).then(response => response.json()).then(data => {\n      // Refresh the activities list after adding\n      setActivities([...activities, data]);\n      setNewActivity({\n        name: '',\n        date: '',\n        time: '',\n        location: ''\n      }); // Reset the form\n    }).catch(error => console.error('Error adding activity:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Itinerary for Trip \", tripId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ItineraryManager, \"m0tncN8PCsoGFam9JbXHIf0wiqs=\", false, function () {\n  return [useParams];\n});\n_c = ItineraryManager;\nexport default ItineraryManager;\nvar _c;\n$RefreshReg$(_c, \"ItineraryManager\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ItineraryManager","_s","activities","setActivities","newActivity","setNewActivity","name","date","time","location","tripId","fetch","then","response","json","data","catch","error","console","handleChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/taylo/Desktop/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx"],"sourcesContent":["// ItineraryManager.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction ItineraryManager() {\r\n  const [activities, setActivities] = useState([]);\r\n  const [newActivity, setNewActivity] = useState({\r\n    name: '',\r\n    date: '',\r\n    time: '',\r\n    location: '',\r\n  });\r\n\r\n  const { tripId } = useParams(); // Get trip ID from route parameters\r\n\r\n  useEffect(() => {\r\n    // Fetch activities for the current trip\r\n    fetch(`/trips/${tripId}/activities`)\r\n      .then((response) => response.json())\r\n      .then((data) => setActivities(data))\r\n      .catch((error) => console.error('Error fetching activities:', error));\r\n  }, [tripId]);\r\n\r\n  const handleChange = (e) => {\r\n    setNewActivity({\r\n      ...newActivity,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // POST request to add a new activity\r\n    fetch(`/trips/${tripId}/activities`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newActivity),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Refresh the activities list after adding\r\n        setActivities([...activities, data]);\r\n        setNewActivity({ name: '', date: '', time: '', location: '' }); // Reset the form\r\n      })\r\n      .catch((error) => console.error('Error adding activity:', error));\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Itinerary for Trip {tripId}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItineraryManager;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAC7CW,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAO,CAAC,GAAGb,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEhCD,SAAS,CAAC,MAAM;IACd;IACAe,KAAK,CAAC,UAAUD,MAAM,aAAa,CAAC,CACjCE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKZ,aAAa,CAACY,IAAI,CAAC,CAAC,CACnCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1Bf,cAAc,CAAC;MACb,GAAGD,WAAW;MACd,CAACgB,CAAC,CAACC,MAAM,CAACf,IAAI,GAAGc,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB;IACAb,KAAK,CAAC,UAAUD,MAAM,aAAa,EAAE;MACnCe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACzB,WAAW;IAClC,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAZ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEa,IAAI,CAAC,CAAC;MACpCV,cAAc,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAGD,oBACElB,OAAA;IAAA+B,QAAA,eACE/B,OAAA;MAAA+B,QAAA,GAAI,qBAAmB,EAACpB,MAAM;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACjC,EAAA,CAnDQD,gBAAgB;EAAA,QASJH,SAAS;AAAA;AAAAsC,EAAA,GATrBnC,gBAAgB;AAqDzB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}