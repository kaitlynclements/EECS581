{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylo\\\\Desktop\\\\EECS581\\\\TravelMate\\\\frontend\\\\src\\\\components\\\\ItineraryManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport MapComponent from './MapComponent'; // Import the Map component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItineraryManager = () => {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\n  const [typedTripName, setTypedTripName] = useState('');\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\n  const [selectedTripDates, setSelectedTripDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [activity, setActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: '',\n    latitude: null,\n    longitude: null\n  }); // Updated state for location details\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentActivityId, setCurrentActivityId] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null); // Autocomplete instance for location input\n\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    const fetchTripsWithActivities = async () => {\n      try {\n        const response = await api.get(`/trips?user_id=${userId}`);\n        const tripsData = response.data;\n        const tripsWithActivities = await Promise.all(tripsData.map(async trip => {\n          try {\n            const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\n            return {\n              ...trip,\n              activities: activitiesResponse.data || [] // Set activities to an empty array if none\n            };\n          } catch (error) {\n            console.error(`Error fetching activities for trip ${trip.id}:`, error);\n            return {\n              ...trip,\n              activities: []\n            };\n          }\n        }));\n        setTrips(tripsWithActivities);\n        setTripOptions(tripsData);\n      } catch (error) {\n        console.error(\"Error fetching trips or activities:\", error);\n        alert(\"Failed to load trips and activities.\");\n      }\n    };\n    fetchTripsWithActivities();\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setActivity(prevActivity => ({\n      ...prevActivity,\n      [name]: value\n    }));\n  };\n  const handlePlaceChanged = () => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setActivity(prevActivity => ({\n          ...prevActivity,\n          location: place.formatted_address || '',\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        }));\n      }\n    }\n  };\n  const onLoadAutocomplete = auto => setAutocomplete(auto);\n  const handleTripNameChange = async e => {\n    setTypedTripName(e.target.value);\n    const selectedTrip = tripOptions.find(trip => trip.name === e.target.value);\n    if (selectedTrip) {\n      try {\n        const response = await api.get(`/trips/${selectedTrip.id}`);\n        setSelectedTripBudget(response.data.budget);\n        setSelectedTripDates({\n          startDate: response.data.start_date,\n          endDate: response.data.end_date\n        });\n      } catch (error) {\n        console.error(\"Error fetching trip details:\", error);\n      }\n    } else {\n      setSelectedTripBudget(null);\n      setSelectedTripDates({\n        startDate: '',\n        endDate: ''\n      });\n    }\n  };\n  const addActivity = async e => {\n    e.preventDefault();\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\n      const newActivity = {\n        ...activity\n      };\n      const activityDate = new Date(activity.date);\n      const startDate = new Date(selectedTripDates.startDate);\n      const endDate = new Date(selectedTripDates.endDate);\n      if (activityDate < startDate || activityDate > endDate) {\n        return alert(\"Activity date must be within the trip date range\");\n      }\n      try {\n        const tripId = tripOptions.find(t => t.name === typedTripName).id;\n        const response = await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\n        const createdActivity = response.data.activity;\n        setTrips(prevTrips => prevTrips.map(trip => trip.id === tripId ? {\n          ...trip,\n          activities: [...trip.activities, {\n            ...newActivity,\n            id: createdActivity\n          }]\n        } : trip));\n        setActivity({\n          name: '',\n          date: '',\n          time: '',\n          location: '',\n          latitude: null,\n          longitude: null\n        });\n        setTypedTripName('');\n        setSelectedTripBudget(null);\n      } catch (error) {\n        console.error(\"Error adding activity:\", error);\n        alert(\"Failed to add activity.\");\n      }\n    } else {\n      alert('Please fill out all fields and select a trip name');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-manager\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Itineraries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addActivity,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Trip Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: typedTripName,\n            onChange: handleTripNameChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a trip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), tripOptions.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: trip.name,\n              children: trip.name\n            }, trip.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), selectedTripBudget !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total Budget: $\", selectedTripBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: activity.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: activity.date,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"time\",\n            value: activity.time,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n            googleMapsApiKey: \"AIzaSyCbJ9OEK1bSd7DLg2XHOE8zT2PlBxODR1g\",\n            libraries: ['places'],\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onLoad: onLoadAutocomplete,\n              onPlaceChanged: handlePlaceChanged,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"location\",\n                value: activity.location,\n                onChange: handleInputChange,\n                placeholder: \"Search for a location\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%',\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        width: \"100%\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(ItineraryManager, \"/eFtsUnYz1wXzWaeV+xDmOLvCIQ=\");\n_c = ItineraryManager;\nexport default ItineraryManager;\nvar _c;\n$RefreshReg$(_c, \"ItineraryManager\");","map":{"version":3,"names":["React","useEffect","useState","LoadScript","Autocomplete","api","MapComponent","jsxDEV","_jsxDEV","ItineraryManager","_s","trips","setTrips","tripOptions","setTripOptions","typedTripName","setTypedTripName","selectedTripBudget","setSelectedTripBudget","selectedTripDates","setSelectedTripDates","startDate","endDate","activity","setActivity","name","date","time","location","latitude","longitude","isEditing","setIsEditing","currentActivityId","setCurrentActivityId","autocomplete","setAutocomplete","userId","localStorage","getItem","fetchTripsWithActivities","response","get","tripsData","data","tripsWithActivities","Promise","all","map","trip","activitiesResponse","id","activities","error","console","alert","handleInputChange","e","value","target","prevActivity","handlePlaceChanged","place","getPlace","geometry","formatted_address","lat","lng","onLoadAutocomplete","auto","handleTripNameChange","selectedTrip","find","budget","start_date","end_date","addActivity","preventDefault","newActivity","activityDate","Date","tripId","t","post","createdActivity","prevTrips","className","style","display","children","flex","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","required","googleMapsApiKey","libraries","onLoad","onPlaceChanged","placeholder","width","marginLeft","height","_c","$RefreshReg$"],"sources":["C:/Users/taylo/Desktop/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\r\nimport api from '../services/api';\r\nimport MapComponent from './MapComponent'; // Import the Map component\r\n\r\nconst ItineraryManager = () => {\r\n  const [trips, setTrips] = useState([]);\r\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\r\n  const [typedTripName, setTypedTripName] = useState('');\r\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\r\n  const [selectedTripDates, setSelectedTripDates] = useState({ startDate: '', endDate: '' });\r\n  const [activity, setActivity] = useState({\r\n    name: '',\r\n    date: '',\r\n    time: '',\r\n    location: '',\r\n    latitude: null,\r\n    longitude: null,\r\n  }); // Updated state for location details\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentActivityId, setCurrentActivityId] = useState(null);\r\n  const [autocomplete, setAutocomplete] = useState(null); // Autocomplete instance for location input\r\n\r\n  const userId = localStorage.getItem('user_id');\r\n\r\n  useEffect(() => {\r\n    const fetchTripsWithActivities = async () => {\r\n      try {\r\n        const response = await api.get(`/trips?user_id=${userId}`);\r\n        const tripsData = response.data;\r\n\r\n        const tripsWithActivities = await Promise.all(\r\n          tripsData.map(async (trip) => {\r\n            try {\r\n              const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\r\n              return {\r\n                ...trip,\r\n                activities: activitiesResponse.data || [], // Set activities to an empty array if none\r\n              };\r\n            } catch (error) {\r\n              console.error(`Error fetching activities for trip ${trip.id}:`, error);\r\n              return { ...trip, activities: [] };\r\n            }\r\n          })\r\n        );\r\n\r\n        setTrips(tripsWithActivities);\r\n        setTripOptions(tripsData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching trips or activities:\", error);\r\n        alert(\"Failed to load trips and activities.\");\r\n      }\r\n    };\r\n\r\n    fetchTripsWithActivities();\r\n  }, [userId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setActivity((prevActivity) => ({\r\n      ...prevActivity,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePlaceChanged = () => {\r\n    if (autocomplete) {\r\n      const place = autocomplete.getPlace();\r\n      if (place.geometry) {\r\n        setActivity((prevActivity) => ({\r\n          ...prevActivity,\r\n          location: place.formatted_address || '',\r\n          latitude: place.geometry.location.lat(),\r\n          longitude: place.geometry.location.lng(),\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onLoadAutocomplete = (auto) => setAutocomplete(auto);\r\n\r\n  const handleTripNameChange = async (e) => {\r\n    setTypedTripName(e.target.value);\r\n    const selectedTrip = tripOptions.find((trip) => trip.name === e.target.value);\r\n    if (selectedTrip) {\r\n      try {\r\n        const response = await api.get(`/trips/${selectedTrip.id}`);\r\n        setSelectedTripBudget(response.data.budget);\r\n        setSelectedTripDates({\r\n          startDate: response.data.start_date,\r\n          endDate: response.data.end_date,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching trip details:\", error);\r\n      }\r\n    } else {\r\n      setSelectedTripBudget(null);\r\n      setSelectedTripDates({ startDate: '', endDate: '' });\r\n    }\r\n  };\r\n\r\n  const addActivity = async (e) => {\r\n    e.preventDefault();\r\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\r\n      const newActivity = { ...activity };\r\n\r\n      const activityDate = new Date(activity.date);\r\n      const startDate = new Date(selectedTripDates.startDate);\r\n      const endDate = new Date(selectedTripDates.endDate);\r\n\r\n      if (activityDate < startDate || activityDate > endDate) {\r\n        return alert(\"Activity date must be within the trip date range\");\r\n      }\r\n\r\n      try {\r\n        const tripId = tripOptions.find((t) => t.name === typedTripName).id;\r\n        const response = await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\r\n\r\n        const createdActivity = response.data.activity;\r\n\r\n        setTrips((prevTrips) =>\r\n          prevTrips.map((trip) =>\r\n            trip.id === tripId\r\n              ? { ...trip, activities: [...trip.activities, { ...newActivity, id: createdActivity }] }\r\n              : trip\r\n          )\r\n        );\r\n\r\n        setActivity({ name: '', date: '', time: '', location: '', latitude: null, longitude: null });\r\n        setTypedTripName('');\r\n        setSelectedTripBudget(null);\r\n      } catch (error) {\r\n        console.error(\"Error adding activity:\", error);\r\n        alert(\"Failed to add activity.\");\r\n      }\r\n    } else {\r\n      alert('Please fill out all fields and select a trip name');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"itinerary-manager\" style={{ display: 'flex' }}>\r\n      <div style={{ flex: 1 }}>\r\n        <h1>Manage Itineraries</h1>\r\n        <form onSubmit={addActivity}>\r\n          <div>\r\n            <label>Trip Name:</label>\r\n            <select value={typedTripName} onChange={handleTripNameChange}>\r\n              <option value=\"\">Select a trip</option>\r\n              {tripOptions.map((trip) => (\r\n                <option key={trip.id} value={trip.name}>\r\n                  {trip.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {selectedTripBudget !== null && <h3>Total Budget: ${selectedTripBudget}</h3>}\r\n          </div>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={activity.name}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              value={activity.date}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"time\"\r\n              value={activity.time}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Location:</label>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyCbJ9OEK1bSd7DLg2XHOE8zT2PlBxODR1g\" libraries={['places']}>\r\n              <Autocomplete onLoad={onLoadAutocomplete} onPlaceChanged={handlePlaceChanged}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  value={activity.location}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Search for a location\"\r\n                  required\r\n                />\r\n              </Autocomplete>\r\n            </LoadScript>\r\n          </div>\r\n          <button type=\"submit\">Add Activity</button>\r\n        </form>\r\n        {/* Existing trip and activity rendering */}\r\n      </div>\r\n      <div style={{ width: '30%', marginLeft: '20px' }}>\r\n        <h3>Map</h3>\r\n        <MapComponent width=\"100%\" height=\"200px\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItineraryManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}