{"ast":null,"code":"var _jsxFileName = \"/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport MapComponent from './MapComponent'; // Import the Map component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItineraryManager = () => {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\n  const [typedTripName, setTypedTripName] = useState('');\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\n  const [selectedTripDates, setSelectedTripDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [activity, setActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: '',\n    latitude: null,\n    longitude: null\n  }); // Updated state for location details\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentActivityId, setCurrentActivityId] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null); // Autocomplete instance for location input\n\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    const fetchTripsWithActivities = async () => {\n      try {\n        // Fetch owned trips\n        const ownedTripsResponse = await api.get(`/trips?user_id=${userId}`);\n        const ownedTrips = ownedTripsResponse.data;\n\n        // Fetch shared trips\n        const sharedTripsResponse = await api.get(`/users/${userId}/shared-trips`);\n        const sharedTrips = sharedTripsResponse.data.map(trip => ({\n          ...trip,\n          shared: true // Flag for shared trips\n        }));\n\n        // Combine owned and shared trips\n        const allTrips = [...ownedTrips, ...sharedTrips];\n\n        // Fetch activities for each trip\n        const tripsWithActivities = await Promise.all(allTrips.map(async trip => {\n          try {\n            const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\n            return {\n              ...trip,\n              activities: activitiesResponse.data || []\n            };\n          } catch (error) {\n            console.warn(`No activities found for trip ${trip.id}:`, error);\n            return {\n              ...trip,\n              activities: []\n            }; // Initialize activities as empty\n          }\n        }));\n        setTrips(tripsWithActivities);\n\n        // Update trip options for dropdown\n        setTripOptions(tripsWithActivities.map(trip => ({\n          id: trip.id,\n          name: trip.name,\n          sharedBy: trip.shared ? trip.sharedBy || 'Someone' : null\n        })));\n      } catch (error) {\n        console.error(\"Error fetching trips or activities:\", error);\n      }\n    };\n    fetchTripsWithActivities();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setActivity(prevActivity => ({\n      ...prevActivity,\n      [name]: value\n    }));\n  };\n  const handlePlaceChanged = () => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setActivity(prevActivity => ({\n          ...prevActivity,\n          location: place.formatted_address || '',\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        }));\n      }\n    }\n  };\n  const onLoadAutocomplete = auto => setAutocomplete(auto);\n  const handleTripNameChange = async e => {\n    setTypedTripName(e.target.value);\n    const selectedTrip = tripOptions.find(trip => trip.name === e.target.value);\n    if (selectedTrip) {\n      try {\n        const response = await api.get(`/trips/${selectedTrip.id}`);\n        setSelectedTripBudget(response.data.budget);\n        setSelectedTripDates({\n          startDate: response.data.start_date,\n          endDate: response.data.end_date\n        });\n      } catch (error) {\n        console.error(\"Error fetching trip details:\", error);\n      }\n    } else {\n      setSelectedTripBudget(null);\n      setSelectedTripDates({\n        startDate: '',\n        endDate: ''\n      });\n    }\n  };\n  const addActivity = async e => {\n    e.preventDefault();\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\n      const newActivity = {\n        ...activity\n      };\n      const activityDate = new Date(activity.date);\n      const startDate = new Date(selectedTripDates.startDate);\n      const endDate = new Date(selectedTripDates.endDate);\n      if (activityDate < startDate || activityDate > endDate) {\n        return alert(\"Activity date must be within the trip date range\");\n      }\n      try {\n        const tripId = tripOptions.find(t => t.name === typedTripName).id;\n        const response = await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\n        const createdActivity = response.data.activity;\n        setTrips(prevTrips => prevTrips.map(trip => trip.id === tripId ? {\n          ...trip,\n          activities: [...trip.activities, {\n            ...newActivity,\n            id: createdActivity\n          }]\n        } : trip));\n        setActivity({\n          name: '',\n          date: '',\n          time: '',\n          location: '',\n          latitude: null,\n          longitude: null\n        });\n        setTypedTripName('');\n        setSelectedTripBudget(null);\n      } catch (error) {\n        console.error(\"Error adding activity:\", error);\n        alert(\"Failed to add activity.\");\n      }\n    } else {\n      alert('Please fill out all fields and select a trip name');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-manager\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Itineraries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addActivity,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Trip Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: typedTripName,\n            onChange: handleTripNameChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a trip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), tripOptions.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: trip.name,\n              children: [trip.name, \" \", trip.sharedBy ? `(Shared)` : '(Owned)']\n            }, trip.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), selectedTripBudget !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total Budget: $\", selectedTripBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: activity.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: activity.date,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"time\",\n            value: activity.time,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n            googleMapsApiKey: \"AIzaSyCbJ9OEK1bSd7DLg2XHOE8zT2PlBxODR1g\",\n            libraries: ['places'],\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onLoad: onLoadAutocomplete,\n              onPlaceChanged: handlePlaceChanged,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"location\",\n                value: activity.location,\n                onChange: handleInputChange,\n                placeholder: \"Search for a location\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%',\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        width: \"100%\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(ItineraryManager, \"OWbNIERr1BpSYyh0T2+hmhLHZTI=\");\n_c = ItineraryManager;\nexport default ItineraryManager;\nvar _c;\n$RefreshReg$(_c, \"ItineraryManager\");","map":{"version":3,"names":["React","useEffect","useState","LoadScript","Autocomplete","api","MapComponent","jsxDEV","_jsxDEV","ItineraryManager","_s","trips","setTrips","tripOptions","setTripOptions","typedTripName","setTypedTripName","selectedTripBudget","setSelectedTripBudget","selectedTripDates","setSelectedTripDates","startDate","endDate","activity","setActivity","name","date","time","location","latitude","longitude","isEditing","setIsEditing","currentActivityId","setCurrentActivityId","autocomplete","setAutocomplete","userId","localStorage","getItem","fetchTripsWithActivities","ownedTripsResponse","get","ownedTrips","data","sharedTripsResponse","sharedTrips","map","trip","shared","allTrips","tripsWithActivities","Promise","all","activitiesResponse","id","activities","error","console","warn","sharedBy","handleInputChange","e","value","target","prevActivity","handlePlaceChanged","place","getPlace","geometry","formatted_address","lat","lng","onLoadAutocomplete","auto","handleTripNameChange","selectedTrip","find","response","budget","start_date","end_date","addActivity","preventDefault","newActivity","activityDate","Date","alert","tripId","t","post","createdActivity","prevTrips","className","style","display","children","flex","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","required","googleMapsApiKey","libraries","onLoad","onPlaceChanged","placeholder","width","marginLeft","height","_c","$RefreshReg$"],"sources":["/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport api from '../services/api';\nimport MapComponent from './MapComponent'; // Import the Map component\n\nconst ItineraryManager = () => {\n  const [trips, setTrips] = useState([]);\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\n  const [typedTripName, setTypedTripName] = useState('');\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\n  const [selectedTripDates, setSelectedTripDates] = useState({ startDate: '', endDate: '' });\n  const [activity, setActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: '',\n    latitude: null,\n    longitude: null,\n  }); // Updated state for location details\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentActivityId, setCurrentActivityId] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null); // Autocomplete instance for location input\n\n  const userId = localStorage.getItem('user_id');\n\n  useEffect(() => {\n    const fetchTripsWithActivities = async () => {\n      try {\n        // Fetch owned trips\n        const ownedTripsResponse = await api.get(`/trips?user_id=${userId}`);\n        const ownedTrips = ownedTripsResponse.data;\n  \n        // Fetch shared trips\n        const sharedTripsResponse = await api.get(`/users/${userId}/shared-trips`);\n        const sharedTrips = sharedTripsResponse.data.map(trip => ({\n          ...trip,\n          shared: true, // Flag for shared trips\n        }));\n  \n        // Combine owned and shared trips\n        const allTrips = [...ownedTrips, ...sharedTrips];\n  \n        // Fetch activities for each trip\n        const tripsWithActivities = await Promise.all(\n          allTrips.map(async (trip) => {\n            try {\n              const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\n              return { ...trip, activities: activitiesResponse.data || [] };\n            } catch (error) {\n              console.warn(`No activities found for trip ${trip.id}:`, error);\n              return { ...trip, activities: [] }; // Initialize activities as empty\n            }\n          })\n        );\n  \n        setTrips(tripsWithActivities);\n  \n        // Update trip options for dropdown\n        setTripOptions(\n          tripsWithActivities.map((trip) => ({\n            id: trip.id,\n            name: trip.name,\n            sharedBy: trip.shared ? trip.sharedBy || 'Someone' : null,\n          }))\n        );\n      } catch (error) {\n        console.error(\"Error fetching trips or activities:\", error);\n      }\n    };\n  \n    fetchTripsWithActivities();\n  }, []);\n  \n  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setActivity((prevActivity) => ({\n      ...prevActivity,\n      [name]: value,\n    }));\n  };\n\n  const handlePlaceChanged = () => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setActivity((prevActivity) => ({\n          ...prevActivity,\n          location: place.formatted_address || '',\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng(),\n        }));\n      }\n    }\n  };\n\n  const onLoadAutocomplete = (auto) => setAutocomplete(auto);\n\n  const handleTripNameChange = async (e) => {\n    setTypedTripName(e.target.value);\n    const selectedTrip = tripOptions.find((trip) => trip.name === e.target.value);\n    if (selectedTrip) {\n      try {\n        const response = await api.get(`/trips/${selectedTrip.id}`);\n        setSelectedTripBudget(response.data.budget);\n        setSelectedTripDates({\n          startDate: response.data.start_date,\n          endDate: response.data.end_date,\n        });\n      } catch (error) {\n        console.error(\"Error fetching trip details:\", error);\n      }\n    } else {\n      setSelectedTripBudget(null);\n      setSelectedTripDates({ startDate: '', endDate: '' });\n    }\n  };\n\n  const addActivity = async (e) => {\n    e.preventDefault();\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\n      const newActivity = { ...activity };\n\n      const activityDate = new Date(activity.date);\n      const startDate = new Date(selectedTripDates.startDate);\n      const endDate = new Date(selectedTripDates.endDate);\n\n      if (activityDate < startDate || activityDate > endDate) {\n        return alert(\"Activity date must be within the trip date range\");\n      }\n\n      try {\n        const tripId = tripOptions.find((t) => t.name === typedTripName).id;\n        const response = await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\n\n        const createdActivity = response.data.activity;\n\n        setTrips((prevTrips) =>\n          prevTrips.map((trip) =>\n            trip.id === tripId\n              ? { ...trip, activities: [...trip.activities, { ...newActivity, id: createdActivity }] }\n              : trip\n          )\n        );\n\n        setActivity({ name: '', date: '', time: '', location: '', latitude: null, longitude: null });\n        setTypedTripName('');\n        setSelectedTripBudget(null);\n      } catch (error) {\n        console.error(\"Error adding activity:\", error);\n        alert(\"Failed to add activity.\");\n      }\n    } else {\n      alert('Please fill out all fields and select a trip name');\n    }\n  };\n\n  return (\n    <div className=\"itinerary-manager\" style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <h1>Manage Itineraries</h1>\n        <form onSubmit={addActivity}>\n          <div>\n            <label>Trip Name:</label>\n            <select value={typedTripName} onChange={handleTripNameChange}>\n            <option value=\"\">Select a trip</option>\n            {tripOptions.map((trip) => (\n            <option key={trip.id} value={trip.name}>\n            {trip.name} {trip.sharedBy ? `(Shared)` : '(Owned)'}\n            </option>\n            ))}\n            </select>\n            {selectedTripBudget !== null && <h3>Total Budget: ${selectedTripBudget}</h3>}\n          </div>\n          <div>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={activity.name}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Date:</label>\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={activity.date}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Time:</label>\n            <input\n              type=\"time\"\n              name=\"time\"\n              value={activity.time}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Location:</label>\n            <LoadScript googleMapsApiKey=\"AIzaSyCbJ9OEK1bSd7DLg2XHOE8zT2PlBxODR1g\" libraries={['places']}>\n              <Autocomplete onLoad={onLoadAutocomplete} onPlaceChanged={handlePlaceChanged}>\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  value={activity.location}\n                  onChange={handleInputChange}\n                  placeholder=\"Search for a location\"\n                  required\n                />\n              </Autocomplete>\n            </LoadScript>\n          </div>\n          <button type=\"submit\">Add Activity</button>\n        </form>\n        {/* Existing trip and activity rendering */}\n      </div>\n      <div style={{ width: '30%', marginLeft: '20px' }}>\n        <h3>Map</h3>\n        <MapComponent width=\"100%\" height=\"200px\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ItineraryManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}