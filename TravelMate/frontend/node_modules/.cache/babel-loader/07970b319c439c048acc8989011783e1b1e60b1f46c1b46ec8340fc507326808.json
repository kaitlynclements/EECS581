{"ast":null,"code":"var _jsxFileName = \"/Users/sammuehlebach/Desktop/KU/EECS_581/EECS581/TravelMate/frontend/src/components/TripManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { deleteTrip } from '../services/api'; // Import the deleteTrip API function\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TripManager() {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [tripName, setTripName] = useState('');\n  const [destination, setDestination] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const history = useHistory();\n  const userId = localStorage.getItem(\"userId\");\n  useEffect(() => {\n    // Load trips on component mount\n    fetchTrips();\n  }, []);\n  const fetchTrips = async () => {\n    // Function to load trips from the server (already existing)\n  };\n  const handleDeleteTrip = async tripId => {\n    if (window.confirm(\"Are you sure you want to delete this trip?\")) {\n      try {\n        await deleteTrip(tripId);\n        alert(\"Trip deleted successfully\");\n        fetchTrips(); // Refresh the list after deletion\n      } catch (error) {\n        alert(\"Failed to delete trip\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Trips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: trips.map(trip => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [trip.name, \" - \", trip.destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTrip(trip.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, trip.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(TripManager, \"bjV46q4KaJZz0RPdOPTMdMt2ty0=\", false, function () {\n  return [useHistory];\n});\n_c = TripManager;\nexport default TripManager;\nvar _c;\n$RefreshReg$(_c, \"TripManager\");","map":{"version":3,"names":["React","useState","useEffect","api","deleteTrip","useHistory","Link","jsxDEV","_jsxDEV","TripManager","_s","trips","setTrips","tripName","setTripName","destination","setDestination","startDate","setStartDate","endDate","setEndDate","history","userId","localStorage","getItem","fetchTrips","handleDeleteTrip","tripId","window","confirm","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","trip","name","onClick","id","_c","$RefreshReg$"],"sources":["/Users/sammuehlebach/Desktop/KU/EECS_581/EECS581/TravelMate/frontend/src/components/TripManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { deleteTrip } from '../services/api';  // Import the deleteTrip API function\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nfunction TripManager() {\n  const [trips, setTrips] = useState([]);\n  const [tripName, setTripName] = useState('');\n  const [destination, setDestination] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const history = useHistory();\n\n  const userId = localStorage.getItem(\"userId\");\n\n  useEffect(() => {\n    // Load trips on component mount\n    fetchTrips();\n  }, []);\n\n  const fetchTrips = async () => {\n    // Function to load trips from the server (already existing)\n  };\n\n  const handleDeleteTrip = async (tripId) => {\n    if (window.confirm(\"Are you sure you want to delete this trip?\")) {\n      try {\n        await deleteTrip(tripId);\n        alert(\"Trip deleted successfully\");\n        fetchTrips();  // Refresh the list after deletion\n      } catch (error) {\n        alert(\"Failed to delete trip\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Your Trips</h2>\n      <ul>\n        {trips.map((trip) => (\n          <li key={trip.id}>\n            <span>{trip.name} - {trip.destination}</span>\n            <button onClick={() => handleDeleteTrip(trip.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TripManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,UAAU,QAAQ,iBAAiB,CAAC,CAAE;AAC/C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMoB,OAAO,GAAGhB,UAAU,CAAC,CAAC;EAE5B,MAAMiB,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7CtB,SAAS,CAAC,MAAM;IACd;IACAuB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;EAAA,CACD;EAED,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAIC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChE,IAAI;QACF,MAAMzB,UAAU,CAACuB,MAAM,CAAC;QACxBG,KAAK,CAAC,2BAA2B,CAAC;QAClCL,UAAU,CAAC,CAAC,CAAC,CAAE;MACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdD,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB5B,OAAA;MAAAwB,QAAA,EACGrB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBACd9B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,GAAOM,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACvB,WAAW;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7C5B,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACY,IAAI,CAACG,EAAE,CAAE;UAAAT,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF1DE,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC1B,EAAA,CA5CQD,WAAW;EAAA,QAMFJ,UAAU;AAAA;AAAAqC,EAAA,GANnBjC,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}