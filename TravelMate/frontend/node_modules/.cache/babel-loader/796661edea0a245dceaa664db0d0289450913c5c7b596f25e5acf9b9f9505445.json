{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylo\\\\Desktop\\\\EECS581\\\\TravelMate\\\\frontend\\\\src\\\\components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [profile, setProfile] = useState({\n    first_name: '',\n    last_name: '',\n    email: ''\n  });\n  useEffect(() => {\n    const fetchProfile = async () => {\n      const userId = localStorage.getItem('user_id'); // Retrieve user_id from localStorage\n      if (!userId) {\n        console.error(\"User ID not found in localStorage\");\n        return;\n      }\n      try {\n        const response = await api.get(`/profile/${userId}`, {\n          withCredentials: true\n        });\n        setProfile(response.data);\n      } catch (error) {\n        console.error(\"Profile fetch error:\", error.response ? error.response.data : error.message);\n        alert(\"Error fetching profile: \" + (error.response ? error.response.data.error : error.message));\n      }\n    };\n    fetchProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", profile.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", profile.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", profile.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"MWVl+m3zEg99tzNDwjoMYzrvVpk=\");\n_c = Profile;\nexport default Profile;\n\n/*\r\nfunction Profile() {\r\n  const [profile, setProfile] = useState({ first_name: '', last_name: '', email: '' });\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchProfile() {\r\n      const response = await api.get('/profile');\r\n      setProfile(response.data);\r\n    }\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await api.put('/profile/update', {\r\n        ...profile,\r\n        old_password: oldPassword,\r\n        new_password: newPassword\r\n      });\r\n      alert('Profile updated successfully');\r\n    } catch (error) {\r\n      alert('Error updating profile');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n      <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n        <label>First Name: </label>\r\n        <input type=\"text\" value={profile.first_name} onChange={(e) => setProfile({...profile, first_name: e.target.value})} />\r\n        \r\n        <label>Last Name: </label>\r\n        <input type=\"text\" value={profile.last_name} onChange={(e) => setProfile({...profile, last_name: e.target.value})} />\r\n        \r\n        <label>Email: </label>\r\n        <input type=\"email\" value={profile.email} onChange={(e) => setProfile({...profile, email: e.target.value})} />\r\n        \r\n        <label>Old Password: </label>\r\n        <input type=\"password\" value={oldPassword} onChange={(e) => setOldPassword(e.target.value)} />\r\n        \r\n        <label>New Password: </label>\r\n        <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n        \r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Profile","_s","profile","setProfile","first_name","last_name","email","fetchProfile","userId","localStorage","getItem","console","error","response","get","withCredentials","data","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/taylo/Desktop/EECS581/TravelMate/frontend/src/components/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nfunction Profile() {\r\n    const [profile, setProfile] = useState({ first_name: '', last_name: '', email: '' });\r\n\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            const userId = localStorage.getItem('user_id');  // Retrieve user_id from localStorage\r\n            if (!userId) {\r\n                console.error(\"User ID not found in localStorage\");\r\n                return;\r\n            }\r\n            try {\r\n                const response = await api.get(`/profile/${userId}`, { withCredentials: true });\r\n                setProfile(response.data);\r\n            } catch (error) {\r\n                console.error(\"Profile fetch error:\", error.response ? error.response.data : error.message);\r\n                alert(\"Error fetching profile: \" + (error.response ? error.response.data.error : error.message));\r\n            }\r\n        };\r\n        fetchProfile();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <p>First Name: {profile.first_name}</p>\r\n            <p>Last Name: {profile.last_name}</p>\r\n            <p>Email: {profile.email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n/*\r\nfunction Profile() {\r\n  const [profile, setProfile] = useState({ first_name: '', last_name: '', email: '' });\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchProfile() {\r\n      const response = await api.get('/profile');\r\n      setProfile(response.data);\r\n    }\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await api.put('/profile/update', {\r\n        ...profile,\r\n        old_password: oldPassword,\r\n        new_password: newPassword\r\n      });\r\n      alert('Profile updated successfully');\r\n    } catch (error) {\r\n      alert('Error updating profile');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n      <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n        <label>First Name: </label>\r\n        <input type=\"text\" value={profile.first_name} onChange={(e) => setProfile({...profile, first_name: e.target.value})} />\r\n        \r\n        <label>Last Name: </label>\r\n        <input type=\"text\" value={profile.last_name} onChange={(e) => setProfile({...profile, last_name: e.target.value})} />\r\n        \r\n        <label>Email: </label>\r\n        <input type=\"email\" value={profile.email} onChange={(e) => setProfile({...profile, email: e.target.value})} />\r\n        \r\n        <label>Old Password: </label>\r\n        <input type=\"password\" value={oldPassword} onChange={(e) => setOldPassword(e.target.value)} />\r\n        \r\n        <label>New Password: </label>\r\n        <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n        \r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,UAAU,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAEpFX,SAAS,CAAC,MAAM;IACZ,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAE;MACjD,IAAI,CAACF,MAAM,EAAE;QACTG,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;QAClD;MACJ;MACA,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,YAAYN,MAAM,EAAE,EAAE;UAAEO,eAAe,EAAE;QAAK,CAAC,CAAC;QAC/EZ,UAAU,CAACU,QAAQ,CAACG,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACG,IAAI,GAAGJ,KAAK,CAACK,OAAO,CAAC;QAC3FC,KAAK,CAAC,0BAA0B,IAAIN,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACG,IAAI,CAACJ,KAAK,GAAGA,KAAK,CAACK,OAAO,CAAC,CAAC;MACpG;IACJ,CAAC;IACDV,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBxB,OAAA;MAAAoB,QAAA,GAAG,cAAY,EAACjB,OAAO,CAACE,UAAU;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCxB,OAAA;MAAAoB,QAAA,GAAG,aAAW,EAACjB,OAAO,CAACG,SAAS;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCxB,OAAA;MAAAoB,QAAA,GAAG,SAAO,EAACjB,OAAO,CAACI,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd;AAACtB,EAAA,CA7BQD,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA+BhB,eAAeA,OAAO;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}