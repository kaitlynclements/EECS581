{"ast":null,"code":"var _jsxFileName = \"/Users/sammuehlebach/Desktop/KU/EECS_581/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport MapComponent from './MapComponent'; // Import the Map component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItineraryManager = () => {\n  _s();\n  const [trips, setTrips] = useState({});\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\n  const [typedTripName, setTypedTripName] = useState('');\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\n  const [selectedTripDates, setSelectedTripDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [activity, setActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: ''\n  });\n\n  // Retrieve userId from localStorage\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    const fetchTripsWithActivities = async () => {\n      try {\n        const response = await api.get(`/trips?user_id=${userId}`);\n        const tripsData = response.data;\n        console.log(\"Fetched trips data:\", tripsData);\n\n        // Fetch activities for each trip\n        const tripsWithActivities = await Promise.all(tripsData.map(async trip => {\n          try {\n            const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\n            return {\n              ...trip,\n              activities: activitiesResponse.data || [] // Set activities to an empty array if none\n            };\n          } catch (error) {\n            console.error(`Error fetching activities for trip ${trip.id}:`, error);\n            return {\n              ...trip,\n              activities: []\n            }; // Set to empty array on error\n          }\n        }));\n        setTrips(tripsWithActivities); // Set trips with their activities\n        setTripOptions(tripsData); // Populate tripOptions for dropdown\n      } catch (error) {\n        console.error(\"Error fetching trips or activities:\", error);\n        alert(\"Failed to load trips and activities.\");\n      }\n    };\n    fetchTripsWithActivities();\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setActivity(prevActivity => ({\n      ...prevActivity,\n      [name]: value\n    }));\n  };\n  const handleTripNameChange = async e => {\n    setTypedTripName(e.target.value); // Update selected trip name\n\n    // Fetch the selected trip's details, including budget\n    const selectedTrip = tripOptions.find(trip => trip.name === e.target.value);\n    if (selectedTrip) {\n      try {\n        const response = await api.get(`/trips/${selectedTrip.id}`);\n        setSelectedTripBudget(response.data.budget); // Store the trip's budget\n      } catch (error) {\n        console.error(\"Error fetching trip budget:\", error);\n      }\n    } else {\n      setSelectedTripBudget(null); // Reset budget if no trip is selected\n    }\n  };\n  const addActivity = async e => {\n    e.preventDefault();\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\n      const newActivity = {\n        ...activity\n      };\n      const activityDate = new Date(activity.date);\n      const startDate = new Date(selectedTripDates.startDate);\n      const endDate = new Date(selectedTripDates.endDate);\n      if (activityDate < startDate || activityDate > endDate) {\n        return jsonify({\n          'error': \"Activity date must be within the trip date range\"\n        }), 400;\n      }\n      try {\n        // Find the selected trip ID\n        const tripId = tripOptions.find(t => t.name === typedTripName).id;\n\n        // Send the new activity to the backend\n        await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\n\n        // Update local state without losing existing activities\n        setTrips(prevTrips => prevTrips.map(trip => trip.id === tripId ? {\n          ...trip,\n          activities: [...trip.activities, newActivity]\n        } : trip));\n\n        // Reset form fields after adding\n        setActivity({\n          name: '',\n          date: '',\n          time: '',\n          location: ''\n        });\n        setTypedTripName('');\n        setSelectedTripBudget(null); // Reset budget when trip is deselected\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          alert(error.response.data.error);\n        } else {\n          alert(\"Failed to add activity: \" + error.message);\n        }\n      }\n    } else {\n      alert('Please fill out all fields and select a trip name');\n    }\n  };\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split('-');\n    const date = new Date(year, month - 1, day); // Month is 0-indexed in JavaScript Date\n    const options = {\n      month: 'long',\n      day: 'numeric'\n    };\n    return date.toLocaleDateString('en-US', options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-manager\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Itineraries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addActivity,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Trip Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: typedTripName,\n            onChange: handleTripNameChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a trip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), tripOptions.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: trip.name,\n              children: trip.name\n            }, trip.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), selectedTripBudget !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Total Budget: $\", selectedTripBudget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: activity.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: activity.date,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"time\",\n            value: activity.time,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            value: activity.location,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Itineraries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), trips.length > 0 ? trips.map(trip => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trip-activities\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: trip.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), \" - \", trip.destination, \" (\", formatDate(trip.start_date), \" - \", formatDate(trip.end_date), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: trip.activities.length > 0 ? trip.activities.sort((a, b) => new Date(`${a.date}T${a.time}`) - new Date(`${b.date}T${b.time}`)).map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: activity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this), \" - \", activity.date, \" at \", activity.time, \", \", activity.location]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 23\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No activities created for this trip yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, trip.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trips found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%',\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        width: \"100%\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ItineraryManager, \"ApK8aHx1165NeLdFeOBfDLsYu5Y=\");\n_c = ItineraryManager;\nexport default ItineraryManager;\nvar _c;\n$RefreshReg$(_c, \"ItineraryManager\");","map":{"version":3,"names":["React","useEffect","useState","api","MapComponent","jsxDEV","_jsxDEV","ItineraryManager","_s","trips","setTrips","tripOptions","setTripOptions","typedTripName","setTypedTripName","selectedTripBudget","setSelectedTripBudget","selectedTripDates","setSelectedTripDates","startDate","endDate","activity","setActivity","name","date","time","location","userId","localStorage","getItem","fetchTripsWithActivities","response","get","tripsData","data","console","log","tripsWithActivities","Promise","all","map","trip","activitiesResponse","id","activities","error","alert","handleInputChange","e","value","target","prevActivity","handleTripNameChange","selectedTrip","find","budget","addActivity","preventDefault","newActivity","activityDate","Date","jsonify","tripId","t","post","prevTrips","status","message","formatDate","dateString","year","month","day","split","options","toLocaleDateString","className","style","display","children","flex","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","length","destination","start_date","end_date","sort","a","b","index","width","marginLeft","height","_c","$RefreshReg$"],"sources":["/Users/sammuehlebach/Desktop/KU/EECS_581/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport MapComponent from './MapComponent'; // Import the Map component\n\nconst ItineraryManager = () => {\n  const [trips, setTrips] = useState({});\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\n  const [typedTripName, setTypedTripName] = useState('');\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\n  const [selectedTripDates, setSelectedTripDates] = useState({ startDate: '', endDate: '' });\n  const [activity, setActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: '',\n  });\n\n  // Retrieve userId from localStorage\n  const userId = localStorage.getItem('user_id');\n\n  useEffect(() => {\n    const fetchTripsWithActivities = async () => {\n      try {\n        const response = await api.get(`/trips?user_id=${userId}`);\n        const tripsData = response.data;\n        console.log(\"Fetched trips data:\", tripsData);\n\n        // Fetch activities for each trip\n        const tripsWithActivities = await Promise.all(\n          tripsData.map(async (trip) => {\n            try {\n              const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\n              return {\n                ...trip,\n                activities: activitiesResponse.data || [], // Set activities to an empty array if none\n              };\n            } catch (error) {\n              console.error(`Error fetching activities for trip ${trip.id}:`, error);\n              return { ...trip, activities: [] }; // Set to empty array on error\n            }\n          })\n        );\n\n        setTrips(tripsWithActivities); // Set trips with their activities\n        setTripOptions(tripsData); // Populate tripOptions for dropdown\n      } catch (error) {\n        console.error(\"Error fetching trips or activities:\", error);\n        alert(\"Failed to load trips and activities.\");\n      }\n    };\n\n    fetchTripsWithActivities();\n  }, [userId]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setActivity((prevActivity) => ({\n      ...prevActivity,\n      [name]: value,\n    }));\n  };\n\n  const handleTripNameChange = async (e) => {\n    setTypedTripName(e.target.value); // Update selected trip name\n    \n    // Fetch the selected trip's details, including budget\n    const selectedTrip = tripOptions.find((trip) => trip.name === e.target.value);\n    if (selectedTrip) {\n      try {\n        const response = await api.get(`/trips/${selectedTrip.id}`);\n        setSelectedTripBudget(response.data.budget); // Store the trip's budget\n      } catch (error) {\n        console.error(\"Error fetching trip budget:\", error);\n      }\n    } else {\n      setSelectedTripBudget(null); // Reset budget if no trip is selected\n    }\n  }\n\n  const addActivity = async (e) => {\n    e.preventDefault();\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\n      const newActivity = { ...activity };\n\n      const activityDate = new Date(activity.date);\n      const startDate = new Date(selectedTripDates.startDate);\n      const endDate = new Date(selectedTripDates.endDate);\n\n      if (activityDate < startDate || activityDate > endDate) {\n        return jsonify({'error': \"Activity date must be within the trip date range\"}), 400;\n      }\n\n      try {\n        // Find the selected trip ID\n        const tripId = tripOptions.find(t => t.name === typedTripName).id;\n\n        // Send the new activity to the backend\n        await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\n\n        // Update local state without losing existing activities\n        setTrips((prevTrips) =>\n          prevTrips.map((trip) =>\n            trip.id === tripId\n              ? { ...trip, activities: [...trip.activities, newActivity] }\n              : trip\n          )\n        );\n\n        // Reset form fields after adding\n        setActivity({ name: '', date: '', time: '', location: '' });\n        setTypedTripName('');\n        setSelectedTripBudget(null); // Reset budget when trip is deselected\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n            alert(error.response.data.error);\n        } else {\n            alert(\"Failed to add activity: \" + error.message);\n        }\n      }\n    } else {\n      alert('Please fill out all fields and select a trip name');\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const [year, month, day] = dateString.split('-');\n    const date = new Date(year, month - 1, day); // Month is 0-indexed in JavaScript Date\n    const options = { month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n  };\n\n  return (\n    <div className=\"itinerary-manager\" style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <h1>Manage Itineraries</h1>\n        <form onSubmit={addActivity}>\n          <div>\n            <label>Trip Name:</label>\n            <select value={typedTripName} onChange={handleTripNameChange}>\n              <option value=\"\">Select a trip</option>\n              {tripOptions.map((trip) => (\n                <option key={trip.id} value={trip.name}>\n                  {trip.name}\n                </option>\n              ))}\n            </select>\n            {selectedTripBudget !== null && (\n              <div>\n                <h3>Total Budget: ${selectedTripBudget}</h3>\n              </div>\n            )}\n          </div>\n          <div>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={activity.name}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label>Date:</label>\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={activity.date}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label>Time:</label>\n            <input\n              type=\"time\"\n              name=\"time\"\n              value={activity.time}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label>Location:</label>\n            <input\n              type=\"text\"\n              name=\"location\"\n              value={activity.location}\n              onChange={handleInputChange}\n            />\n          </div>\n          <button type=\"submit\">Add Activity</button>\n        </form>\n\n        <h2>Your Itineraries</h2>\n        {trips.length > 0 ? (\n          trips.map((trip) => (\n            <div key={trip.id} className=\"trip-activities\">\n              <h3>\n                <strong>{trip.name}</strong> - {trip.destination} (\n                {formatDate(trip.start_date)} - {formatDate(trip.end_date)})\n              </h3>\n              <ul>\n                {trip.activities.length > 0 ? (\n                  trip.activities.sort((a, b) => new Date(`${a.date}T${a.time}`) - new Date(`${b.date}T${b.time}`))\n                    .map((activity, index) => (\n                      <li key={index}>\n                        <strong>{activity.name}</strong> - {activity.date} at {activity.time}, {activity.location}\n                      </li>\n                    ))\n                ) : (\n                  <li>No activities created for this trip yet.</li>\n                )}\n              </ul>\n            </div>\n          ))\n        ) : (\n          <p>No trips found.</p>\n        )}\n      </div>\n\n      <div style={{ width: '30%', marginLeft: '20px' }}>\n        <h3>Map</h3>\n        <MapComponent width=\"100%\" height=\"200px\" /> {/* Small map */}\n      </div>\n    </div>\n  );\n};\n\nexport default ItineraryManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}