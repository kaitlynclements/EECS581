{"ast":null,"code":"var _jsxFileName = \"/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/BudgetManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BudgetManager() {\n  _s();\n  const [trips, setTrips] = useState([]); // State to store trips\n  const [selectedTrip, setSelectedTrip] = useState(''); // State to store selected trip\n\n  // Get user ID from localStorage\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    // Function to fetch trips from the backend\n    const fetchTrips = async () => {\n      try {\n        const response = await api.get(`/trips?user_id=${userId}`);\n        setTrips(response.data); // Store trips in state\n      } catch (error) {\n        console.error(\"Error fetching trips:\", error);\n        alert(\"Failed to load trips.\");\n      }\n    };\n\n    // Fetch trips when the component mounts\n    if (userId) {\n      fetchTrips();\n    }\n  }, [userId]);\n\n  // Handle dropdown selection change\n  const handleTripChange = e => {\n    setSelectedTrip(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Budget Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tripDropdown\",\n      children: \"Select a Trip:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tripDropdown\",\n      value: selectedTrip,\n      onChange: handleTripChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select a Trip --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), trips.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: trip.id,\n        children: [trip.name, \" - \", trip.destination, \" (\", trip.start_date, \" to \", trip.end_date, \")\"]\n      }, trip.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedTrip && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Trip Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Trip ID: \", selectedTrip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(BudgetManager, \"ZtR3PhMgj7eEtQHr3iUNa+rJj2k=\");\n_c = BudgetManager;\nexport default BudgetManager;\nvar _c;\n$RefreshReg$(_c, \"BudgetManager\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","BudgetManager","_s","trips","setTrips","selectedTrip","setSelectedTrip","userId","localStorage","getItem","fetchTrips","response","get","data","error","console","alert","handleTripChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","trip","name","destination","start_date","end_date","_c","$RefreshReg$"],"sources":["/Users/Kaitlyn/Desktop/EECS581/TravelMate/frontend/src/components/BudgetManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\nfunction BudgetManager() {\n    const [trips, setTrips] = useState([]); // State to store trips\n    const [selectedTrip, setSelectedTrip] = useState(''); // State to store selected trip\n\n    // Get user ID from localStorage\n    const userId = localStorage.getItem('user_id');\n\n    useEffect(() => {\n        // Function to fetch trips from the backend\n        const fetchTrips = async () => {\n        try {\n            const response = await api.get(`/trips?user_id=${userId}`);\n            setTrips(response.data); // Store trips in state\n        } catch (error) {\n            console.error(\"Error fetching trips:\", error);\n            alert(\"Failed to load trips.\");\n        }\n    };\n\n    // Fetch trips when the component mounts\n    if (userId) {\n        fetchTrips();\n    }\n}, [userId]);\n\n    // Handle dropdown selection change\n    const handleTripChange = (e) => {\n    setSelectedTrip(e.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Budget Manager</h1>\n      \n      {/* Dropdown menu for selecting a trip */}\n      <label htmlFor=\"tripDropdown\">Select a Trip:</label>\n      <select id=\"tripDropdown\" value={selectedTrip} onChange={handleTripChange}>\n        <option value=\"\">-- Select a Trip --</option>\n        {trips.map((trip) => (\n          <option key={trip.id} value={trip.id}>\n            {trip.name} - {trip.destination} ({trip.start_date} to {trip.end_date})\n          </option>\n        ))}\n      </select>\n\n      {/* Display selected trip's budget or other details */}\n      {selectedTrip && (\n        <div>\n          <h2>Selected Trip Details</h2>\n          <p>Trip ID: {selectedTrip}</p>\n          {/* Add any additional trip-related information here */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BudgetManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}