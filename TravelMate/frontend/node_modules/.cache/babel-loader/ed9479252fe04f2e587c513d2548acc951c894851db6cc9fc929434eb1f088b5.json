{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylo\\\\Desktop\\\\EECS581\\\\TravelMate\\\\frontend\\\\src\\\\components\\\\ItineraryManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItineraryManager = () => {\n  _s();\n  const [trips, setTrips] = useState({});\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\n  const [typedTripName, setTypedTripName] = useState('');\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\n  const [selectedTripDates, setSelectedTripDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [activity, setActivity] = useState({\n    name: '',\n    date: '',\n    time: '',\n    location: ''\n  });\n\n  // Retrieve userId from localStorage\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    const fetchTripsWithActivities = async () => {\n      try {\n        const response = await api.get(`/trips?user_id=${userId}`);\n        const tripsData = response.data;\n        console.log(\"Fetched trips data:\", tripsData);\n\n        // Fetch activities for each trip\n        const tripsWithActivities = await Promise.all(tripsData.map(async trip => {\n          try {\n            const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\n            return {\n              ...trip,\n              activities: activitiesResponse.data || [] // Set activities to an empty array if none\n            };\n          } catch (error) {\n            console.error(`Error fetching activities for trip ${trip.id}:`, error);\n            return {\n              ...trip,\n              activities: []\n            }; // Set to empty array on error\n          }\n        }));\n        setTrips(tripsWithActivities); // Set trips with their activities\n        setTripOptions(tripsData); // Populate tripOptions for dropdown\n      } catch (error) {\n        console.error(\"Error fetching trips or activities:\", error);\n        alert(\"Failed to load trips and activities.\");\n      }\n    };\n    fetchTripsWithActivities();\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setActivity(prevActivity => ({\n      ...prevActivity,\n      [name]: value\n    }));\n  };\n  const handleTripNameChange = async e => {\n    setTypedTripName(e.target.value); // Update selected trip name\n\n    // Fetch the selected trip's details, including budget\n    const selectedTrip = tripOptions.find(trip => trip.name === e.target.value);\n    if (selectedTrip) {\n      try {\n        const response = await api.get(`/trips/${selectedTrip.id}`);\n        setSelectedTripBudget(response.data.budget); // Store the trip's budget\n      } catch (error) {\n        console.error(\"Error fetching trip budget:\", error);\n      }\n    } else {\n      setSelectedTripBudget(null); // Reset budget if no trip is selected\n    }\n  };\n  const addActivity = async e => {\n    e.preventDefault();\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\n      const newActivity = {\n        ...activity\n      };\n      const activityDate = new Date(activity.date);\n      const startDate = new Date(selectedTripDates.startDate);\n      const endDate = new Date(selectedTripDates.endDate);\n      if (activityDate < startDate || activityDate > endDate) {\n        return jsonify({\n          'error': \"Activity date must be within the trip date range\"\n        }), 400;\n      }\n      try {\n        // Find the selected trip ID\n        const tripId = tripOptions.find(t => t.name === typedTripName).id;\n\n        // Send the new activity to the backend\n        await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\n\n        // Update local state\n        setTrips(prevTrips => {\n          const existingActivities = prevTrips[typedTripName] || [];\n          return {\n            ...prevTrips,\n            [typedTripName]: [...existingActivities, newActivity]\n          };\n        });\n\n        // Reset form fields after adding\n        setActivity({\n          name: '',\n          date: '',\n          time: '',\n          location: ''\n        });\n        setTypedTripName('');\n        setSelectedTripBudget(null); // Reset budget when trip is deselected\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          alert(error.response.data.error);\n        } else {\n          alert(\"Failed to add activity: \" + error.message);\n        }\n      }\n    } else {\n      alert('Please fill out all fields and select a trip name');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Itineraries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addActivity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Trip Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: typedTripName,\n          onChange: handleTripNameChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a trip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), tripOptions.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: trip.name,\n            children: trip.name\n          }, trip.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), selectedTripBudget !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total Budget: $\", selectedTripBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: activity.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: activity.date,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"time\",\n          value: activity.time,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          value: activity.location,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Trip Itineraries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), trips.length > 0 ? trips.map(trip => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [trip.name, \" - \", trip.destination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: trip.activities.length > 0 ? trip.activities.map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: activity.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), \" - \", activity.date, \" at \", activity.time, \", \", activity.location]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No activities created for this trip yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)]\n    }, trip.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No trips found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ItineraryManager, \"DxbGEa67r5ipvdO4XNjt/+l5GrU=\");\n_c = ItineraryManager;\nexport default ItineraryManager;\nvar _c;\n$RefreshReg$(_c, \"ItineraryManager\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","ItineraryManager","_s","trips","setTrips","tripOptions","setTripOptions","typedTripName","setTypedTripName","selectedTripBudget","setSelectedTripBudget","selectedTripDates","setSelectedTripDates","startDate","endDate","activity","setActivity","name","date","time","location","userId","localStorage","getItem","fetchTripsWithActivities","response","get","tripsData","data","console","log","tripsWithActivities","Promise","all","map","trip","activitiesResponse","id","activities","error","alert","handleInputChange","e","value","target","prevActivity","handleTripNameChange","selectedTrip","find","budget","addActivity","preventDefault","newActivity","activityDate","Date","jsonify","tripId","t","post","prevTrips","existingActivities","status","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","length","destination","index","_c","$RefreshReg$"],"sources":["C:/Users/taylo/Desktop/EECS581/TravelMate/frontend/src/components/ItineraryManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst ItineraryManager = () => {\r\n  const [trips, setTrips] = useState({});\r\n  const [tripOptions, setTripOptions] = useState([]); // Stores available trips for the dropdown\r\n  const [typedTripName, setTypedTripName] = useState('');\r\n  const [selectedTripBudget, setSelectedTripBudget] = useState(null); // New state for budget\r\n  const [selectedTripDates, setSelectedTripDates] = useState({ startDate: '', endDate: '' });\r\n  const [activity, setActivity] = useState({\r\n    name: '',\r\n    date: '',\r\n    time: '',\r\n    location: '',\r\n  });\r\n\r\n  // Retrieve userId from localStorage\r\n  const userId = localStorage.getItem('user_id');\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTripsWithActivities = async () => {\r\n      try {\r\n        const response = await api.get(`/trips?user_id=${userId}`);\r\n        const tripsData = response.data;\r\n        console.log(\"Fetched trips data:\", tripsData);\r\n\r\n        // Fetch activities for each trip\r\n        const tripsWithActivities = await Promise.all(\r\n          tripsData.map(async (trip) => {\r\n            try {\r\n              const activitiesResponse = await api.get(`/trips/${trip.id}/activities`);\r\n              return {\r\n                ...trip,\r\n                activities: activitiesResponse.data || [], // Set activities to an empty array if none\r\n              };\r\n            } catch (error) {\r\n              console.error(`Error fetching activities for trip ${trip.id}:`, error);\r\n              return { ...trip, activities: [] }; // Set to empty array on error\r\n            }\r\n          })\r\n        );\r\n\r\n        setTrips(tripsWithActivities); // Set trips with their activities\r\n        setTripOptions(tripsData); // Populate tripOptions for dropdown\r\n      } catch (error) {\r\n        console.error(\"Error fetching trips or activities:\", error);\r\n        alert(\"Failed to load trips and activities.\");\r\n      }\r\n    };\r\n\r\n    fetchTripsWithActivities();\r\n  }, [userId]);\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setActivity((prevActivity) => ({\r\n      ...prevActivity,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTripNameChange = async (e) => {\r\n    setTypedTripName(e.target.value); // Update selected trip name\r\n    \r\n    // Fetch the selected trip's details, including budget\r\n    const selectedTrip = tripOptions.find((trip) => trip.name === e.target.value);\r\n    if (selectedTrip) {\r\n      try {\r\n        const response = await api.get(`/trips/${selectedTrip.id}`);\r\n        setSelectedTripBudget(response.data.budget); // Store the trip's budget\r\n      } catch (error) {\r\n        console.error(\"Error fetching trip budget:\", error);\r\n      }\r\n    } else {\r\n      setSelectedTripBudget(null); // Reset budget if no trip is selected\r\n    }\r\n  }\r\n\r\n  const addActivity = async (e) => {\r\n    e.preventDefault();\r\n    if (activity.name && activity.date && activity.time && activity.location && typedTripName) {\r\n      const newActivity = { ...activity };\r\n\r\n      const activityDate = new Date(activity.date);\r\n      const startDate = new Date(selectedTripDates.startDate);\r\n      const endDate = new Date(selectedTripDates.endDate);\r\n\r\n      if (activityDate < startDate || activityDate > endDate) {\r\n        return jsonify({'error': \"Activity date must be within the trip date range\"}), 400;\r\n      }\r\n\r\n      try {\r\n        // Find the selected trip ID\r\n        const tripId = tripOptions.find(t => t.name === typedTripName).id;\r\n\r\n        // Send the new activity to the backend\r\n        await api.post(`/trips/${tripId}/itinerary/activities/create`, newActivity);\r\n\r\n        // Update local state\r\n        setTrips((prevTrips) => {\r\n          const existingActivities = prevTrips[typedTripName] || [];\r\n          return {\r\n            ...prevTrips,\r\n            [typedTripName]: [...existingActivities, newActivity],\r\n          };\r\n        });\r\n\r\n        // Reset form fields after adding\r\n        setActivity({ name: '', date: '', time: '', location: '' });\r\n        setTypedTripName('');\r\n        setSelectedTripBudget(null); // Reset budget when trip is deselected\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 400) {\r\n            alert(error.response.data.error);\r\n        } else {\r\n            alert(\"Failed to add activity: \" + error.message);\r\n        }\r\n      }\r\n    } else {\r\n      alert('Please fill out all fields and select a trip name');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"itinerary-manager\">\r\n      <h1>Manage Itineraries</h1>\r\n      <form onSubmit={addActivity}>\r\n        <div>\r\n          <label>Trip Name:</label>\r\n          <select value={typedTripName} onChange={handleTripNameChange}>\r\n            <option value=\"\">Select a trip</option>\r\n            {tripOptions.map((trip) => (\r\n              <option key={trip.id} value={trip.name}>\r\n                {trip.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {selectedTripBudget !== null && (\r\n            <div>\r\n              <h3>Total Budget: ${selectedTripBudget}</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={activity.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={activity.date}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Time:</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={activity.time}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            value={activity.location}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Add Activity</button>\r\n      </form>\r\n\r\n      <h2>Existing Trip Itineraries</h2>\r\n      {trips.length > 0 ? (\r\n        trips.map((trip) => (\r\n          <div key={trip.id} className=\"trip-activities\">\r\n            <h4>{trip.name} - {trip.destination}</h4>\r\n            <ul>\r\n              {trip.activities.length > 0 ? (\r\n                trip.activities.map((activity, index) => (\r\n                  <li key={index}>\r\n                    <strong>{activity.name}</strong> - {activity.date} at {activity.time}, {activity.location}\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <li>No activities created for this trip yet.</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No trips found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItineraryManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}